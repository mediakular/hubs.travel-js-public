{
  "version": 3,
  "sources": ["../utils/commonUtils.js", "../utils/formUtils.js", "../utils/close-page.js", "../pages/book-workation/book-workation.js", "../pages/book-workation/index.js"],
  "sourcesContent": ["\n// Get all room price data - this is done by a collection list element creating:\n// < script type=\"application/json\" class=\"room-price-data\"> \n// {\n//   \"roomSlug\": \"\",\n//   \"editionSlug\": \"\",\n//   \"basePriceWeek\": ,\n//   \"basePriceMonth\": ,\n//   \"discountMonth2\": ,\n//   \"discountMonth3\":\n// }\n// </ script > \nexport function getAllRoomPrices(editionSlugFilter) {\n  const priceElements = document.querySelectorAll('.room-price-data');\n  const roomPrices = Array.from(priceElements).map(x => JSON.parse(x.textContent));\n  if (!editionSlugFilter) {\n  \treturn roomPrices;\n  }\n  return roomPrices.filter((x) => x.editionSlug === editionSlugFilter)\n}\n\n// calculate month difference while 1 month is always 30 days\nexport function getMonthDifference(startDate, endDate) {\n  if (!startDate || !endDate) return 0;\n  return Math.floor((endDate - startDate) / (1000 * 60 * 60 * 24 * 30)); \n}\n\nexport function formatPrice(price, currency) {\n\t// That\u2019s the locale for German, which uses the formatting style we\u2019re after. \n  // We could also use 'fr-FR', 'it-IT', etc. \u2014 most European locales format this way.\n  return new Intl.NumberFormat('de-DE', {\n    style: 'currency',\n  \tcurrency,\n    currencyDisplay: 'code'\n  }).format(price);\n}\n", "/**\n * Conditional Form Fields Script (Generic & Reusable)\n *\n * This script enables conditional visibility and required-state for form fields\n * based on trigger inputs (like dropdowns or radios).\n *\n * \u2705 How to use:\n * 1. Add `data-trigger=\"yourTriggerName\"` to the input controlling the logic (e.g. <select> or <input>).\n * 2. Add `data-condition-trigger=\"yourTriggerName\"` to any form field container that should be shown conditionally.\n * 3. Add `data-condition-value=\"triggerValue\"` to define when that field should be visible.\n * 4. Inside the conditional container, set form elements to `required` \u2014 the script toggles this automatically.\n *\n * This allows multiple trigger/condition pairs on the same page without extra JS.\n */\nexport function initConditionalFormFields() {\n  const triggers = document.querySelectorAll('[data-trigger]');\n\n  triggers.forEach((trigger) => {\n    trigger.addEventListener('change', () => updateConditionalFields(trigger));\n    updateConditionalFields(trigger); // Run on load\n  });\n\n  function updateConditionalFields(trigger) {\n    const triggerName = trigger.getAttribute('data-trigger');\n    const triggerValue = trigger.value;\n\n    const conditionals = document.querySelectorAll(`[data-condition-trigger=\"${triggerName}\"]`);\n\n    conditionals.forEach((field) => {\n      const shouldShow = field.getAttribute('data-condition-value') === triggerValue;\n      const input = field.matches('input, select, textarea') ? field : field.querySelector('input, select, textarea');\n\n      field.style.display = shouldShow ? 'block' : 'none';\n      if (input) {\n        input.required = shouldShow;\n        if (!shouldShow) input.value = '';\n      }\n    });\n  }\n}\n\n/** This script\n * - loops through all custom dropdowns with \"data-custom-dropdown\" attribute\n * - sets the selected value as selected in the dropdown\n * - creates a hidden input for form data\n * - sets the selected value from \"data-value\" to the hidden input\n **/\nexport function initCustomDropdowns() {\n  document.querySelectorAll('[data-custom-dropdown]').forEach((dropdown) => {\n    // Create the hidden input\n    const input = document.createElement('input');\n    input.type = 'hidden';\n    input.name = dropdown.dataset.name || 'custom-dropdown';\n    input.setAttribute('required', dropdown.dataset.required === 'true' || false);\n    input.value = ''; // Or set a default value if needed\n\n    // Append it to the dropdown or its closest form\n    dropdown.appendChild(input);\n\n    const toggle = dropdown.querySelector('.dropdown-selected-value');\n    const links = dropdown.querySelectorAll('.dropdown-item');\n\n    links.forEach((link) => {\n      link.addEventListener('click', (e) => {\n        e.preventDefault();\n        const value = link.dataset.value;\n        const content = link.cloneNode(true);\n        content.style.padding = 0; //reset paddings from dropdown-item\n\n        // Update visual\n        toggle.innerHTML = '';\n        toggle.appendChild(content);\n\n        // Set hidden field\n        input.value = value;\n      });\n    });\n  });\n}\n\n\n\n// Setting up daterange-pickers\n// Docs: https://mymth.github.io/vanillajs-datepicker/\nexport function initDateRangePickers(groupSelector, startDateSelector, minimumDays = 30) {\n  const datesInput = document.querySelector(groupSelector);\n  const startDateField = document.querySelector(startDateSelector);\n  const rangepicker = new DateRangePicker(datesInput, {\n    format: 'dd. MM yyyy',\n  });\n\n  // Add an event listener to validate the date range\n  let currentMinimumDays = minimumDays;\n\n  // Expose a method to update minimumDays dynamically\n  rangepicker.setMinimumDays = (days) => {\n    currentMinimumDays = days;\n  };\n\n  rangepicker.validateDateRange = () => {\n    const [startDate, endDate] = rangepicker.getDates();\n\n    if (startDate && endDate) {\n      const differenceInDays = Math.floor((endDate - startDate) / (1000 * 60 * 60 * 24));\n      if (differenceInDays < currentMinimumDays) {\n        startDateField.setCustomValidity(`You need to choose a minimum of ${currentMinimumDays} days.`);\n        // Set end date to {{currentMinimumDays}} days after start date\n        rangepicker.setDates(startDate, new Date(startDate.getTime() + currentMinimumDays * 24 * 60 * 60 * 1000)); \n      } else {\n        startDateField.setCustomValidity('');\n      }\n    } else {\n      startDateField.setCustomValidity('');\n    }\n    // Trigger form validation\n    startDateField.reportValidity();\n  }\n\n  datesInput.addEventListener('changeDate', rangepicker.validateDateRange);\n\n  return { rangepicker, datesInput, startDateField };\n}\n\n\n/**\n * This script is responsible for\n *  - the navigation of the multi step field\n *  - update of the wizard step indicators\n *  - form validation of all form elements of the current step\n **/\nexport function initFormWizardSteps() {\n  const steps = document.querySelectorAll('.form-step');\n  const stepIndicators = document.querySelectorAll(\n    '.form-wizard-step .form-wizard-step-progress'\n  );\n  let currentStep = 0;\n\n  function showStep(index) {\n    steps.forEach((step, i) => {\n      step.style.display = i === index ? 'block' : 'none';\n    });\n\n    stepIndicators.forEach((indicator, i) => {\n      if (i < index || i === index) {\n        indicator.classList.add('active');\n      } else {\n        indicator.classList.remove('active');\n      }\n    });\n  }\n\n  function validateCurrentStep() {\n    const currentInputs = steps[currentStep].querySelectorAll('input, select, textarea');\n    const errors = [];\n\n    currentInputs.forEach((input) => {\n      const isHidden = input.type === 'hidden' || input.offsetParent === null;\n\n      if (input.required) {\n        const isEmpty = !input.value || input.value.trim() === '';\n        if (isEmpty) {\n          const label = input.dataset.name || input.name || input.placeholder || 'Unnamed field';\n          errors.push(`${label} is required.`);\n        }\n      }\n\n      // Custom type validation (e.g., email)\n      if (!isHidden && input.value && !input.checkValidity()) {\n        const label = input.name || input.placeholder || 'Unnamed field';\n        errors.push(`${label} is invalid.`);\n      }\n    });\n    return errors;\n  }\n\n  function showErrors(containerId, errorMessages) {\n    const container = document.querySelector(containerId);\n\n    if (!container) return;\n\n    // Clear any previous errors\n    container.innerHTML = '';\n\n    // Create <ul> element\n    const ul = document.createElement('ul');\n\n    // Add each error as <li>\n    errorMessages.forEach((msg) => {\n      const li = document.createElement('li');\n      li.textContent = msg;\n      ul.appendChild(li);\n    });\n\n    // Append the list to the container\n    container.appendChild(ul);\n  }\n\n  function resetErrors(containerId) {\n    const container = document.querySelector(containerId);\n    if (container) {\n      container.innerHTML = '';\n    }\n  }\n\n  document.querySelectorAll('.form-next-step-btn').forEach((btn) => {\n    btn.addEventListener('click', () => {\n      if (btn.getAttribute('disabled') === 'true') {\n        return;\n      }\n\n      const errors = validateCurrentStep();\n      const errorListId = `#error-list-step-${currentStep}`;\n      resetErrors(errorListId);\n      if (errors.length == 0) {\n        currentStep = Math.min(currentStep + 1, steps.length - 1);\n        const isLastStep = currentStep === steps.length - 1;\n        if (isLastStep) {\n          prepareReviewFields(); // this loops through all fields with #review-* and sets the corresponding value\n        }\n        showStep(currentStep);\n      } else {\n        showErrors(errorListId, errors);\n      }\n    });\n  });\n\n  function prepareReviewFields() {\n    const reviewElements = document.querySelectorAll('[id^=\"review-\"]');\n\n    // Loop through the matched elements\n    reviewElements.forEach((element) => {\n      const fieldName = element.dataset.fieldname;\n      try {\n        const fieldValue = document.querySelector(`[name=\"${fieldName}\"]`).value;\n        element.innerText = fieldValue;\n      } catch {}\n    });\n  }\n\n  document.querySelectorAll('.form-previous-step-btn').forEach((btn) => {\n    btn.addEventListener('click', () => {\n      currentStep = Math.max(currentStep - 1, 0);\n      showStep(currentStep);\n    });\n  });\n\n  showStep(currentStep); // Init\n}", "\n/**\n * Initializes a X button on the page with ID \"close-button\":\n * When clicked it tries to receive the previous page\n * - If there was a previous page and that page was on the same domain -> navigate there\n * - If there was no previous page or previous page was not on same domain -> navigate home \"/\"\n */\nexport function initCloseButtonClick() {\n  document.getElementById(\"close-button\").addEventListener(\"click\", function () {\n    const referrer = document.referrer;\n    const currentDomain = window.location.hostname;\n\n    // Extract the domain from the referrer URL\n    let referrerDomain = null;\n    try {\n      referrerDomain = referrer ? new URL(referrer).hostname : null;\n    } catch (e) {\n      referrerDomain = null;\n    }\n\n    if (window.history.length > 1 && referrerDomain === currentDomain) {\n      window.history.back();\n    } else {\n      window.location.href = \"/\";\n    }\n  });\n}", "\nimport { getAllRoomPrices, getMonthDifference, formatPrice } from \"../../utils/commonUtils\";\nimport { initConditionalFormFields, initFormWizardSteps, initCustomDropdowns, initDateRangePickers } from \"../../utils/formUtils\";\nimport { initCloseButtonClick } from \"../../utils/close-page\";\n\nlet selectedCurrency = \"EUR\"; // default currency\nlet rangePickerElements = null; // global variable to store the range picker instance\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  initCloseButtonClick();\n  \n  //form preparation\n  initConditionalFormFields();\n  initFormWizardSteps();\n  initCustomDropdowns();\n  \n  //init controls\n  rangePickerElements = initDateRangePickers('#dates-start-end-group', '#Start-Date');\n  initDestinationDropdown();\n  initSeasonDropDown();\n\n  initPriceUpdateListeners();\n\n  //set inital form values\n  initQueryParamFormValues();\n\n  //init info/card boxes on the right side of the form\n  initCardInfoBoxes();\n});\n\n\n/**\n * This script handles initial setting of form values that come from query parameters\n **/\nfunction initQueryParamFormValues () {\n  const urlParams = new URLSearchParams(window.location.search);\n  const queryDestination = urlParams.get('destination');\n  const queryEdition = urlParams.get('edition');\n  const queryRoom = urlParams.get('room');\n  const queryGuestsCount = urlParams.get('guests');\n\n  queryDestination &&\n    selectDropDownValue('#destination-dropdown', queryDestination, 'data-destinationslug');\n  const selectedEdition = queryEdition && selectDropDownValue('#edition-dropdown', queryEdition, 'data-editionslug');\n  queryRoom && selectDropDownValue('#room-dropdown', queryRoom, 'data-roomslug');\n\n  // Guests dropdown is not a custom dropdown\n  if (queryGuestsCount) {\n    const guestDropdown = document.getElementById('Guests');\n    if (guestDropdown) {\n      guestDropdown.value = queryGuestsCount;\n    }\n  }\n\n  if (selectedEdition) {\n    const seasonStartDate = selectedEdition.dataset.startdate;\n    const seasonEndDate = selectedEdition.dataset.enddate; // TODO: receive length of stay to determine end date\n    \n    const rangepicker = rangePickerElements.rangepicker;\n    rangepicker.setOptions({\n      minDate: seasonStartDate,\n      maxDate: seasonEndDate,\n    });\n    rangepicker.setDates(seasonStartDate, seasonEndDate);\n  }\n}\n\n\n/**\n * This script handles the dependencies of the destination/location dropdown\n * When destination dropdown value changed:\n * - Update Season/Edition dropdown and show only seasons/editions from the specific location\n * - Update Room dropdown and show only rooms from the specific location\n **/\nfunction initDestinationDropdown() {\n  const locationDropdown = document.querySelector('#destination-dropdown');\n\n  const editionDropdown = document.querySelector('#edition-dropdown');\n  const editionToggle = editionDropdown.querySelector('.dropdown-selected-value');\n  const editionPlaceholder = editionToggle.innerHTML;\n\n  const roomDropdown = document.querySelector('#room-dropdown');\n  const roomToggle = roomDropdown.querySelector('.dropdown-selected-value');\n\n  const locationDropdownItems = locationDropdown.querySelectorAll('.dropdown-item');\n  const editionDropdownItems = editionDropdown.querySelectorAll('.dropdown-item');\n  const roomDropdownItems = roomDropdown.querySelectorAll('.dropdown-item');\n\n  function onDestinationChange(selectedDestinationSlug, destinationCurrency) {\n    editionToggle.setAttribute('disabled', selectedDestinationSlug === '' ? 'true' : 'false');\n    roomToggle.setAttribute('disabled', selectedDestinationSlug === '' ? 'true' : 'false');\n\n    // Clear selected edition option\n    editionToggle.innerHTML = editionPlaceholder;\n    roomToggle.innerHTML = editionPlaceholder;\n\n    selectedCurrency = destinationCurrency;\n\n    [...editionDropdownItems, ...roomDropdownItems].forEach((item) => {\n      const visible = item.dataset.destinationslug === selectedDestinationSlug;\n      item.style.display = visible ? 'flex' : 'none';\n    });\n  }\n\n  // Initial population\n  onDestinationChange('', selectedCurrency);\n\n  // Update on change\n  locationDropdownItems.forEach((locationItem) => {\n    locationItem.addEventListener('click', function () {\n      onDestinationChange(this.dataset.destinationslug, this.dataset.currency);\n    });\n  });\n}\n\n\nfunction selectDropDownValue(selector, value, dataAttribute) {\n  const dropdownItems = document.querySelectorAll(`${selector} .dropdown-item`);\n  const item =\n    dropdownItems &&\n    Array.from(dropdownItems).find((item) => item.getAttribute(dataAttribute) === value);\n  item && item.click();\n  return item;\n}\n\n\n/**\n * This script handles the dependencies of the season dropdown\n * When season dropdown value changed:\n * - Reset the start and end dates\n * - Set minimum start date to season start date\n * - Set maximum end date to season end date\n **/\nfunction initSeasonDropDown() {\n  const editionDropdown = document.querySelector('#edition-dropdown');\n  const editionDropdownItems = editionDropdown.querySelectorAll('.dropdown-item');\n\n  const datesInputGroup = document.querySelector('#dates-start-end-group');\n\n  function onSeasonChange(seasonStartDate, seasonEndDate) {\n    const rangepicker = datesInputGroup.rangepicker; // get the instance of the datepicker\n\n    rangepicker.setOptions({\n      minDate: seasonStartDate,\n      maxDate: seasonEndDate,\n    });\n    rangepicker.setDates(seasonStartDate, seasonEndDate);\n  }\n\n  // Update on change\n  editionDropdownItems.forEach((edition) => {\n    edition.addEventListener('click', function () {\n      onSeasonChange(this.dataset.startdate, this.dataset.enddate);\n    });\n  });\n}\n\n/**\n * Initializes event listeners for dropdown and date picker changes on the booking page.\n *\n * - Listens for changes in the start/end date input group and updates price and discount info.\n * - Listens for room selection changes, updates price info, and adjusts the date range picker\n *   based on the selected room's weekly booking allowance.\n * - Listens for changes in the guest count dropdown and updates price info accordingly.\n */\nfunction initPriceUpdateListeners() {\n  // react on change of start / end date\n  const datesInputGroup = document.querySelector('#dates-start-end-group');\n  datesInputGroup.addEventListener('changeDate', () => {\n    updatePriceInfoCard();\n    updateDiscountBoxes();\n  });\n\n  // react on change of room\n  const roomDropdown = document.querySelector('#room-dropdown');\n  const roomDropdownItems = roomDropdown.querySelectorAll('.dropdown-item');\n  roomDropdownItems.forEach((roomItem) => {\n    roomItem.addEventListener('click', () => {\n      updatePriceInfoCard();\n\n      const allowWeeklyBooking = roomItem.getAttribute('data-allow-weekly-booking');\n      // change date range picker to the selected room\n      const rangepicker = rangePickerElements.rangepicker;\n      rangepicker.setMinimumDays(allowWeeklyBooking === 'Enabled' ? 7 : 30);\n      rangepicker.validateDateRange();\n    });\n  });\n\n  //react on guest count change\n  const guestsDropdown = document.querySelector('#Guests');\n  guestsDropdown.addEventListener('change', () => {\n    updatePriceInfoCard();\n  });\n}\n\n\n/**\n * This script handles visual and textual changes on the content on top of the image next to the form\n * depending on form values.\n **/\nfunction initCardInfoBoxes() {\n\n  //initial setup\n  updateDiscountBoxes();\n  updatePriceInfoCard();\n\n}\n\n\nfunction updateDiscountBoxes() {\n  //reset discount infos\n  const datesInputGroup = document.querySelector('#dates-start-end-group');\n  const rangepicker = datesInputGroup.rangepicker; // get the instance of the datepicker\n  \n  const discountInfoBlue = document.querySelector('.discount-info-blue');\n  const discountInfoGreen = document.querySelector('.discount-info-green');\n\n  const [startDate, endDate] = rangepicker.getDates();\n  // calculate month difference while 1 month is always 30 days\n  const monthDifference = getMonthDifference(startDate, endDate);\n  \n  if ((!startDate || !endDate) || monthDifference <= 2) {\n    discountInfoBlue.style.display = 'flex';\n    discountInfoGreen.style.display = 'none';\n  } else {\n    discountInfoBlue.style.display = 'none';\n    discountInfoGreen.style.display = 'flex';\n  }\n}\n\n\n//determine if we display the price info card or not\n// only show, if \n// - destination is set\n// - edition is set\n// - room is set\n// - dates are set\n// - (guests are always set)\nfunction updatePriceInfoCard() {\n  const priceInfoCards = document.querySelectorAll('.price-info-card');\n  const datesInputGroup = document.querySelector('#dates-start-end-group');\n  const rangepicker = datesInputGroup.rangepicker; // get the instance of the datepicker\n  const selectedDestinationItem = document.querySelector('#destination-dropdown .dropdown-selected-value .dropdown-item');\n  const selectedEditionItem = document.querySelector('#edition-dropdown .dropdown-selected-value .dropdown-item');\n  const selectedRoomItem = document.querySelector('#room-dropdown .dropdown-selected-value .dropdown-item');\n  const selectedGuestsItem = document.querySelector('#Guests');\n\n  const destinationSlug = selectedDestinationItem ? selectedDestinationItem.dataset.destinationslug : '';\n  const editionSlug = selectedEditionItem ? selectedEditionItem.dataset.editionslug : '';\n  const roomSlug = selectedRoomItem ? selectedRoomItem.dataset.roomslug : '';\n  const allowWeeklyBooking = selectedRoomItem ? selectedRoomItem.getAttribute('data-allow-weekly-booking') === 'Enabled' : false;\n  const [startDate, endDate] = rangepicker.getDates(); \n  const selectedGuestsCount = selectedGuestsItem ? parseInt(selectedGuestsItem.value) : 0;\n\n  if (destinationSlug && editionSlug && roomSlug && startDate && endDate && selectedGuestsCount > 0) {\n    const editionRoomPrices = getAllRoomPrices();\n    priceInfoCards.forEach(priceInfoCard => { \n      priceInfoCard.style.display = 'flex';\n      updateRoomPriceAndBreakdown(priceInfoCard, editionRoomPrices, editionSlug, roomSlug, startDate, endDate, selectedGuestsCount, allowWeeklyBooking);\n    });\n\n    // update dates\n    const options = { day: 'numeric', month: 'short', year: 'numeric' };\n    const formattedStartDate = startDate.toLocaleDateString('en-GB', { day: 'numeric', month: 'short' }).replace(',', '');\n    const formattedEndDate = endDate.toLocaleDateString('en-GB', options).replace(',', '');\n    document.querySelectorAll('.total-dates').forEach(x => x.innerHTML = `${formattedStartDate} - ${formattedEndDate}`);\n  } else {\n    priceInfoCards.forEach(x => x.style.display = 'none');\n  }\n}\n\n\n// update room price & breakdown\nfunction updateRoomPriceAndBreakdown(priceInfoCard, editionRoomPrices, editionSlug, roomSlug, startDate, endDate, guestsCount, allowWeeklyBooking) {\n  const monthDifference = getMonthDifference(startDate, endDate);\n\n  const roomPriceElement = priceInfoCard.querySelector('.room-price');\n  const discountBox = priceInfoCard.querySelector('.room-price-discount');\n  const roomPriceDescription = priceInfoCard.querySelector('.room-price-month-desc');\n  const totalGuestsElement = priceInfoCard.querySelector('.total-guests');\n  \n  const totalPriceElement = priceInfoCard.querySelector('.total-totalprice');\n  const totalPriceText = totalPriceElement.firstElementChild;\n  const priceBreakdownElement = priceInfoCard.querySelector('.room-price-breakdown');\n  const datesElement = priceInfoCard.querySelector('.total-dates');\n\n  const nextButton = document.querySelector('#form-next-step-btn-step-1'); // we have this only one time on the page\n  const nextButtonAnchor = nextButton.querySelector('a');\n\n  const roomPriceInfo = editionRoomPrices.find((x) => x.editionSlug === editionSlug && x.roomSlug === roomSlug);\n  const priceInfoCardTitles = priceInfoCard.querySelectorAll('.price-info-card-title');\n\n  const hiddenTotalPriceField = document.querySelector(`[name=\"Total-Price\"]`);\n\n  if (!roomPriceInfo) {\n    priceBreakdownElement.innerText = 'No room price found for the selected season or room.';\n    totalPriceElement.style.display = 'none';\n    roomPriceElement.style.display = 'none';\n    discountBox.style.display = 'none';\n    totalGuestsElement.parentElement.style.display = 'none';\n    datesElement.style.display = 'none';\n    roomPriceDescription.style.display = 'none';\n    nextButtonAnchor.style.pointerEvents = 'none';\n    nextButtonAnchor.style.backgroundColor = 'var(--_colors---light-silver)';\n    nextButtonAnchor.style.opacity = 0.3;\n    nextButton.setAttribute('disabled', true);\n    priceInfoCardTitles.forEach(x => x.style.display = 'none');\n    hiddenTotalPriceField.value = 0;\n    return;\n  }\n  \n  //reset visual elements\n  totalPriceElement.style.display = 'block';\n  roomPriceElement.style.display = 'block';\n  totalGuestsElement.parentElement.style.display = 'flex';\n  datesElement.style.display = 'block';\n  roomPriceDescription.style.display = 'block';\n  nextButtonAnchor.style.pointerEvents = 'auto';\n  nextButtonAnchor.style.backgroundColor = 'var(--_colors---primary)';\n  nextButtonAnchor.style.opacity = 1;\n  nextButton.setAttribute('disabled', false);\n  priceInfoCardTitles.forEach(x => x.style.display = 'block');\n\n  const basePriceMonth = roomPriceInfo.basePriceMonth;\n  const discountMonth2 = roomPriceInfo.discountMonth2;\n  const discountMonth3 = roomPriceInfo.discountMonth3;\n\n  let totalPrice = 0;\n  let breakdown = [];\n  let remainingDaysDiscount = 0;\n\n  const getMonthNumberEnding = (month) => month === 1 ? 'st' : (month === 2 ? 'nd' : (month === 3 ? 'rd' : 'th'));\n\n  if (monthDifference < 1 && allowWeeklyBooking) {\n    const weeklyPrice = basePriceMonth / 30 * 7 * guestsCount;\n    discountBox.style.display = 'none';\n    roomPriceElement.innerText = `${formatPrice(weeklyPrice, selectedCurrency)}`;\n    roomPriceDescription.innerText = `per week`;\n  } else if (monthDifference >= 1) {\n    totalPrice += basePriceMonth * guestsCount;\n    breakdown.push(`Month 1: ${formatPrice(totalPrice, selectedCurrency)}`);\n    discountBox.style.display = 'none';\n    roomPriceElement.innerText = `${formatPrice(totalPrice, selectedCurrency)}`;\n    roomPriceDescription.innerText = `1st month`;\n  }\n\n  for (let month = 2; month <= monthDifference; month++) {\n    let discount = 0;\n    if (month === 2) {\n      discount = discountMonth2;\n    } else if (month >= 3) {\n      discount = discountMonth3;\n    }\n\n    const monthlyPrice = basePriceMonth * (1 - discount / 100) * guestsCount;\n    totalPrice += monthlyPrice;\n    breakdown.push(`Month ${month}: ${formatPrice(monthlyPrice, selectedCurrency)}`);\n\n    let monthText = month <= 3 \n        ? `${month}${getMonthNumberEnding(month)} month`\n        : `from 3rd month`;\n\n    if (discount > 0) {\n      discountBox.innerText = `${discount.toFixed(1)}% discount - ${monthText}`;\n      discountBox.style.display = 'flex';\n    }\n\n    roomPriceElement.innerHTML = `${formatPrice(monthlyPrice, selectedCurrency)}`;\n    roomPriceDescription.innerText = monthText;\n    remainingDaysDiscount = discount;\n  }\n\n  const remainingDays = (endDate - startDate) / (1000 * 60 * 60 * 24) - monthDifference * 30;\n  if (remainingDays > 0) {\n    const dailyRate = basePriceMonth * (1 - remainingDaysDiscount / 100) / 30;\n    const remainingPrice = dailyRate * remainingDays * guestsCount;\n    totalPrice += remainingPrice;\n    breakdown.push(`${monthDifference >= 1 ? '+' : ''} ${Math.round(remainingDays)} days: ${formatPrice(remainingPrice, selectedCurrency)}`);\n  }\n\n  priceBreakdownElement.innerHTML = breakdown.join('<br>');\n  totalGuestsElement.innerText = `${guestsCount} x Person`;\n  totalPriceText.innerText = `${formatPrice(totalPrice, selectedCurrency)}`;\n  hiddenTotalPriceField.value = `${formatPrice(totalPrice, selectedCurrency)}`; //setting the value in the hidden field for review and sending in form\n}\n", "import \"./book-workation\";"],
  "mappings": "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",
  "names": ["getAllRoomPrices", "editionSlugFilter", "priceElements", "roomPrices", "x", "getMonthDifference", "startDate", "endDate", "formatPrice", "price", "currency", "init_commonUtils", "__esmMin", "initConditionalFormFields", "trigger", "updateConditionalFields", "triggerName", "triggerValue", "field", "shouldShow", "input", "initCustomDropdowns", "dropdown", "toggle", "link", "e", "value", "content", "initDateRangePickers", "groupSelector", "startDateSelector", "minimumDays", "datesInput", "startDateField", "rangepicker", "currentMinimumDays", "days", "startDate", "endDate", "initFormWizardSteps", "steps", "stepIndicators", "currentStep", "showStep", "index", "step", "i", "indicator", "validateCurrentStep", "currentInputs", "errors", "isHidden", "label", "showErrors", "containerId", "errorMessages", "container", "ul", "msg", "li", "resetErrors", "btn", "errorListId", "prepareReviewFields", "element", "fieldName", "fieldValue", "init_formUtils", "__esmMin", "initCloseButtonClick", "referrer", "currentDomain", "referrerDomain", "init_close_page", "__esmMin", "require_book_workation", "__commonJSMin", "init_commonUtils", "init_formUtils", "init_close_page", "selectedCurrency", "rangePickerElements", "initCloseButtonClick", "initConditionalFormFields", "initFormWizardSteps", "initCustomDropdowns", "initDateRangePickers", "initDestinationDropdown", "initSeasonDropDown", "initPriceUpdateListeners", "initQueryParamFormValues", "initCardInfoBoxes", "urlParams", "queryDestination", "queryEdition", "queryRoom", "queryGuestsCount", "selectDropDownValue", "selectedEdition", "guestDropdown", "seasonStartDate", "seasonEndDate", "rangepicker", "locationDropdown", "editionDropdown", "editionToggle", "editionPlaceholder", "roomDropdown", "roomToggle", "locationDropdownItems", "editionDropdownItems", "roomDropdownItems", "onDestinationChange", "selectedDestinationSlug", "destinationCurrency", "item", "visible", "locationItem", "selector", "value", "dataAttribute", "dropdownItems", "datesInputGroup", "onSeasonChange", "edition", "updatePriceInfoCard", "updateDiscountBoxes", "roomItem", "allowWeeklyBooking", "discountInfoBlue", "discountInfoGreen", "startDate", "endDate", "monthDifference", "getMonthDifference", "priceInfoCards", "selectedDestinationItem", "selectedEditionItem", "selectedRoomItem", "selectedGuestsItem", "destinationSlug", "editionSlug", "roomSlug", "selectedGuestsCount", "editionRoomPrices", "getAllRoomPrices", "priceInfoCard", "updateRoomPriceAndBreakdown", "options", "formattedStartDate", "formattedEndDate", "x", "guestsCount", "roomPriceElement", "discountBox", "roomPriceDescription", "totalGuestsElement", "totalPriceElement", "totalPriceText", "priceBreakdownElement", "datesElement", "nextButton", "nextButtonAnchor", "roomPriceInfo", "priceInfoCardTitles", "hiddenTotalPriceField", "basePriceMonth", "discountMonth2", "discountMonth3", "totalPrice", "breakdown", "remainingDaysDiscount", "getMonthNumberEnding", "month", "weeklyPrice", "formatPrice", "discount", "monthlyPrice", "monthText", "remainingDays", "remainingPrice", "require_book_workation", "__commonJSMin", "import_book_workation"]
}
