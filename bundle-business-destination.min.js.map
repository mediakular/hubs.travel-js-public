{
  "version": 3,
  "sources": ["../components/testimonial-side-carousel.js", "../components/activity-cards.js", "../pages/business-destination/index.js"],
  "sourcesContent": ["export const TestimonialSideCarousel = (function () {\n  let swiperInstance, prevButton, nextButton = null;\n  let SELECTORS = null; // Declare SELECTORS as null initially\n\n  function initSwiper() {\n    const swiperWrapper = document.querySelector(SELECTORS.swiperWrapper);\n    prevButton = document.querySelector(SELECTORS.prevButton);\n    nextButton = document.querySelector(SELECTORS.nextButton);\n\n    if (!swiperWrapper || !prevButton || !nextButton) {\n      console.error('Required elements not found');\n      return null;\n    } \n\n    // Initialize Swiper\n    const swiper = new Swiper(SELECTORS.swiper, {\n      slidesPerView: 1,\n      spaceBetween: 0,\n      freeMode: false,\n      slidesOffsetAfter: 0,\n      navigation: {\n        nextEl: SELECTORS.nextButton,\n        prevEl: SELECTORS.prevButton,\n      },\n      watchOverflow: true,\n    });\n\n\t\tswiperInstance = swiper;\n\n    // Set initial state of buttons\n    updateButtonsState();\n\n    // Add event listeners to update button states when slides change\n    swiper.on('slideChange', function () {\n      updateButtonsState();\n    });\n\n    return swiper;\n  }\n\n  // Function to update button states\n  function updateButtonsState() {\n  \tif (!prevButton || !nextButton) return;\n    \n    prevButton.style.opacity = swiperInstance.isBeginning ? '0.5' : '1';\n    prevButton.style.pointerEvents = swiperInstance.isBeginning ? 'none' : 'auto'; \n\n\t\tnextButton.style.opacity = swiperInstance.isEnd ? '0.5' : '1';\n    nextButton.style.pointerEvents = swiperInstance.isEnd ? 'none' : 'auto';\n  }\n\n  // Public methods\n  return {\n    init: function(selectors) {\n      SELECTORS = selectors; // Assign selectors to the SELECTORS variable\n     \tdocument.addEventListener('DOMContentLoaded', function() {\n        // Initialize swiper\n        initSwiper();\n\t\t\t});\n    }\n  };\n})();\n", "export const ActivityCardsCarousel = (function () {\n  let swiperInstance, prevButton, nextButton = null;\n  let SELECTORS = null;\n\n  function initSwiper() {\n    const refContainer = document.querySelector(SELECTORS.refContainer); \n    const swiperWrapper = document.querySelector(SELECTORS.swiperWrapper);\n    prevButton = document.querySelector(SELECTORS.prevButton);\n    nextButton = document.querySelector(SELECTORS.nextButton);\n\n    if (!refContainer || !swiperWrapper || !prevButton || !nextButton) {\n      console.error('Required elements not found');\n      return null;\n    }    \n    \n    const refRect = refContainer.getBoundingClientRect();\n    const offsetBefore = refRect.left;\n\n    // Initialize Swiper\n    const swiper = new Swiper(SELECTORS.swiper, {\n      slidesPerView: \"auto\",\n      spaceBetween: 16,\n      freeMode: false,\n      slidesOffsetBefore: offsetBefore,\n      slidesOffsetAfter: 16,\n      navigation: {\n        nextEl: SELECTORS.nextButton,\n        prevEl: SELECTORS.prevButton,\n      },\n      watchOverflow: true,\n    });\n\n    swiperInstance = swiper;\n\n    // Set initial state of buttons\n    updateButtonsState();\n\n    // Add event listeners to update button states when slides change\n    swiper.on('slideChange', updateButtonsState);\n    \n    // Add resize event listener separately\n    window.addEventListener('resize', () => {\n      const newOffsetBefore = refContainer.getBoundingClientRect().left;\n      // Check if Swiper instance exists and has a method to update params\n      if (swiper && swiper.params) {\n        swiper.params.slidesOffsetBefore = newOffsetBefore;\n        swiper.update(); // Refresh Swiper\n      }\n    });\n\n    return swiper;\n  }\n\n  // Function to update button states\n  function updateButtonsState() {\n    if (!prevButton || !nextButton) return;\n    \n    prevButton.style.opacity = swiperInstance.isBeginning ? '0.5' : '1';\n    prevButton.style.pointerEvents = swiperInstance.isBeginning ? 'none' : 'auto'; \n\n    //nextButton.style.opacity = swiperInstance.isEnd ? '0.5' : '1';\n    ////nextButton.style.pointerEvents = swiperInstance.isEnd ? 'none' : 'auto';\n    // Get Swiper's max translate position\n    const maxTranslate = swiperInstance.maxTranslate();\n    const currentTranslate = swiperInstance.translate;\n\n    if (currentTranslate <= maxTranslate + 5) { // buffer of 5 to prevent minor calculation errors.\n      nextButton.style.opacity = '0.5';\n      nextButton.style.pointerEvents = 'none';\n    } else {\n      nextButton.style.opacity = '1';\n      nextButton.style.pointerEvents = 'auto';\n    }\n  }\n\n  // Public methods\n  return {\n    init: function(selectors) {\n      SELECTORS = selectors;\n\n      document.addEventListener('DOMContentLoaded', function() {\n        const swiperWrapper = document.querySelector(SELECTORS.swiperWrapper);\n        swiperWrapper.style.gap = '0';\n\n        // Initialize swiper\n        initSwiper();\n      });\n    }\n  };\n})();", "import { TestimonialSideCarousel } from \"../../components/testimonial-side-carousel\"\nimport { ActivityCardsCarousel } from \"../../components/activity-cards\";\n\n// Initialize the carousel\nActivityCardsCarousel.init({\n  refContainer: \"#activity-cards-swiper-ref-container\", // this is needed for calculating the left offset\n  swiper: '#activity-cards-section .swiper',\n  swiperWrapper: '#activity-cards-section .swiper-wrapper',  \n  prevButton: '#activity-cards-swiper-prev-btn',\n  nextButton: '#activity-cards-swiper-next-btn'\n});\n\n// Initialize the carousel\nTestimonialSideCarousel.init({\n  swiper: '#testimonial-side-section .swiper',\n  swiperWrapper: '#testimonial-side-section .swiper-wrapper',  \n  prevButton: '#testimonial-side-btn-left',\n  nextButton: '#testimonial-side-btn-right'\n});"],
  "mappings": "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",
  "names": ["TestimonialSideCarousel", "init_testimonial_side_carousel", "__esmMin", "swiperInstance", "prevButton", "nextButton", "SELECTORS", "initSwiper", "swiperWrapper", "swiper", "updateButtonsState", "selectors", "ActivityCardsCarousel", "init_activity_cards", "__esmMin", "swiperInstance", "prevButton", "nextButton", "SELECTORS", "initSwiper", "refContainer", "swiperWrapper", "offsetBefore", "swiper", "updateButtonsState", "newOffsetBefore", "maxTranslate", "selectors", "require_business_destination", "__commonJSMin", "init_testimonial_side_carousel", "init_activity_cards", "ActivityCardsCarousel", "TestimonialSideCarousel"]
}
